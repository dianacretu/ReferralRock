@using System.Text.Json
@using ReferralRock.Model
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using ReferralRock.Components.CommonComponents;
@inject IPageModelWithHttpClient PageModelWithHttpClient
@inject NavigationManager NavigationManager
@inject ILogger<AddReferral> Logger
@page "/referrals/{memberId}/new"
@rendermode InteractiveServer

<h1>New referral</h1>

@if (ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@if (referral != null)
{
     <FormReferral referral=@referral Action=@SubmitForm FormName="add-form"/>
}
else
{
    <p>Loading...</p>
}


@code {
    [Parameter] public string MemberId { get; set; }
    [SupplyParameterFromForm] 
    public NewReferral referral { get; set; }
    private Member? member;
    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        referral = new NewReferral();

        MemberApiResponse response = await PageModelWithHttpClient.GetMembers(MemberId);
        if (response.Members == null)
        {
            ErrorMessage = response.Message;
            Logger.LogError("Received error when fetching member with id " + MemberId + ": " + response.Message);
            StateHasChanged();
            return;
        }

        if (response.Members.Count != 1)
        {
            throw new Exception("List is expected to have one member.");
        }

        member = response.Members[0];
        Logger.LogInformation("Got member with id " + MemberId + ".");
    }

    private async Task SubmitForm()
    {
        if (member == null)
        {
            throw new Exception("Member should not be null.");
        }

        referral.ReferralCode = member.ReferralCode;
        NewReferralApiResponse response = await PageModelWithHttpClient.CreateReferral(referral, MemberId);
        if (response.Referral == null)
        {
            ErrorMessage = response.Message;
            Logger.LogError("Create referral failed: " + response.Message);
            StateHasChanged();
        }
        else
        {
            Logger.LogInformation("Created referral with id " + response.Referral.Id + ".");
            NavigationManager.NavigateTo($"referrals/{MemberId}", forceLoad: true);
        }
    }
}
