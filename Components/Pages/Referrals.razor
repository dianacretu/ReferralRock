@using System.Text.Json
@using ReferralRock.Model
@inject PageModelWithHttpClient PageModelWithHttpClient
@inject NavigationManager NavigationManager
@page "/referrals/{memberId}"
@rendermode InteractiveServer

<PageTitle>Referrals</PageTitle>

<h1>Referrals</h1>

@if (referrals == null)
{
    <p><em>No referrals</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nr.</th>
                <th>Name</th>
                <th>Email</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (referral, index) in referrals.Select((r, i) => (r, i)))
            {
                <tr>
                    <td>@(index + 1)</td>
                    <td>@referral.DisplayName</td>
                    <td>@referral.Email</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => UpdateReferral(referral.Id)">Update</button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => DeleteReferral(referral.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="NavigateToAnotherPage">Add new referral</button>

@code {
    [Parameter] public string MemberId { get; set; }
    private List<Referral>? referrals;

    protected override async Task OnInitializedAsync()
    {
        referrals = await PageModelWithHttpClient.GetReferrals(MemberId);
    }

    protected void NavigateToAnotherPage()
    {
        NavigationManager.NavigateTo($"referrals/{MemberId}/new", forceLoad: true);
    }

    protected void UpdateReferral(string referralId)
    {
        NavigationManager.NavigateTo($"referrals/{MemberId}/update/{referralId}", forceLoad: true);
    }

    protected async void DeleteReferral(string referralId)
    {
        var response = await PageModelWithHttpClient.DeleteReferral(referralId, MemberId);
    }
}
